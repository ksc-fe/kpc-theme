import Code from '../code';

const link = `<!-- <link rel="stylesheet" type="text/css" href="//cdn.jsdelivr.net/npm/kpc/dist/kpc.css" /> -->
<link rel="stylesheet" type="text/css" href="path/to/theme/index.css" />
`
const code = `const path = require('path');

...
{
    loader: 'stylus-loader',
    options: {
        'include css': true,
        'resolve url': true,
        'import': path.resolve(__dirname, 'path/to/theme/index.styl')
    }
}
`;

<t:parent class="usage-dialog">
    <b:header>
        <span class="k-title">使用说明</span>
        <span class="links">
            详情请参考kpc文档
            <a target="_blank" href="https://design.ksyun.com/docs/getting-started/">Intact</a> /
            <a target="_blank" href="https://design.ksyun.com/docs/vue/">Vue</a> /
            <a target="_blank" href="https://design.ksyun.com/docs/react/">React</a>
        </span>
    </b:header>
    <b:body>
        <h4>全量引入主题</h4> 
        <p>如果你没有通过webpack编译打包，则可以全量引入主题样式，使用index.css替换掉kpc.css即可</p>
        <Code language="html" code={{ link }} />
        <h4>通过webpack stylus-loader引入主题</h4>
        <p>如果你通过webpack编译打包，则可以配置stylus-loader来按需引入主题样式</p>
        <Code language="js" code={{ code }} />
    </b:body>
</t:parent>
